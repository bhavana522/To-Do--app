{"version":3,"sources":["components/Todoform.js","components/Todo.js","components/Todolist.js","App.js","index.js"],"names":["Todoform","props","useState","input","setInput","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","isComplete","onclick","onClick","next","Todolist","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAkCeA,MAhCf,SAAkBC,GAAQ,IAAD,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,KAkBrB,OACI,uBAAMC,UAAU,YAAYC,SAZf,SAAAC,GACjBA,EAAEC,iBAEFP,EAAMK,SAAS,CACXG,GAAGC,KAAKC,MAAsB,IAAhBD,KAAKE,UACnBC,KAAMV,IAGVC,EAAS,KAIL,UACE,uBACEU,KAAK,OACLC,YAAY,aACZC,MAAQb,EACRc,KAAK,OACLZ,UAAU,aACVa,SAvBS,SAAAX,GACjBH,EAASG,EAAEY,OAAOH,UAwBV,wBAAQX,UAAU,cAAlB,0B,sBCiBGe,EA1CF,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,WAAe,EACnCtB,mBAAS,CAC7BO,GAAI,KACJO,MAAM,KAHiD,mBACpDS,EADoD,KAC9CC,EAD8C,KAc3D,OAAID,EAAKhB,GACE,cAAC,EAAD,CAAUgB,KAAMA,EAAMnB,SATZ,SAAAU,GACjBQ,EAAWC,EAAKhB,GAAGO,GACnBU,EAAQ,CACJjB,GAAI,KACJO,MAAM,QAQPK,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACjB,sBACExB,UAAWuB,EAAKE,WAAa,oBAAsB,WADrD,UAKI,qBAAmBC,QAAS,kBAAKT,EAAaM,EAAKnB,KAAnD,SACKmB,EAAKf,MADAe,EAAKnB,IAGf,sBAAKJ,UAAU,QAAf,UACE,cAAC,IAAD,CACE2B,QAAS,kBAAMT,EAAWK,EAAKnB,KAC/BJ,UAAU,gBAEZ,cAAC,IAAD,CACE2B,QAAS,kBAAMN,EAAQ,CAACjB,GAAImB,EAAKnB,GAAIO,MAAOY,EAAKK,QACjD5B,UAAU,mBAbXwB,OC2BIK,MAjDf,WAAqB,IAAD,EACShC,mBAAS,IADlB,mBACTmB,EADS,KACHc,EADG,KAmChB,OACI,gCACI,2DACA,cAAC,EAAD,CAAU7B,SAnCF,SAAAsB,GACZ,GAAIA,EAAKf,OAAQ,QAAQuB,KAAKR,EAAKf,MAAnC,CAIA,IAAMwB,EAAQ,CAAIT,GAAJ,mBAAYP,IAE1Bc,EAASE,OA6BL,cAAC,EAAD,CACAhB,MAAOA,EACPC,aAjBa,SAAAb,GACjB,IAAI6B,EAAejB,EAAMM,KAAI,SAAAC,GAMzB,OALIA,EAAKnB,KAAOA,IAEZmB,EAAKE,YAAaF,EAAKE,YAGpBF,KAEXO,EAASG,IASJf,WAvBU,SAAAd,GACd,IAAM8B,EAAY,YAAIlB,GAAOmB,QAAO,SAAAZ,GAAI,OAAIA,EAAKnB,KAAOA,KAExD0B,EAASI,IAqBLf,WA/BU,SAACiB,EAAQC,GACnBA,EAAS7B,OAAQ,QAAQuB,KAAKM,EAAS7B,OAG5CsB,GAAS,SAAAQ,GAAI,OAAGA,EAAKhB,KAAI,SAAAiB,GAAI,OAAKA,EAAKnC,KAAOgC,EAASC,EAAWE,eCP3DC,MARf,WACE,OACE,qBAAKxC,UAAU,WAAf,SACG,cAAC,EAAD,OCHPyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.52c26d52.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\n\r\nfunction Todoform(props) {\r\nconst [input, setInput] = useState('');\r\n\r\nconst handleChange = e => {\r\n    setInput(e.target.value);\r\n};\r\n\r\nconst handleSubmit = e =>{\r\n    e.preventDefault();\r\n        \r\n    props.onSubmit({\r\n        id:Math.floor(Math.random() * 10000),\r\n        text: input\r\n        });\r\n\r\n    setInput('');\r\n};\r\n\r\n    return (\r\n        <form className='todo-form' onSubmit={handleSubmit}>\r\n          <input\r\n            type='text'\r\n            placeholder='Add a todo'\r\n            value= {input}\r\n            name='text'\r\n            className='todo-input'\r\n            onChange={handleChange}\r\n            />\r\n            <button className='todo-button'>Add todo</button>\r\n        </form>\r\n    );\r\n}\r\nexport default Todoform;\r\n","import React, {useState} from 'react';\r\nimport TodoForm from './Todoform';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nconst Todo = ({todos, completeTodo, removeTodo, updateTodo}) =>{\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value:''\r\n    });\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id,value);\r\n        setEdit({\r\n            id: null,\r\n            value:''\r\n\r\n        });\r\n    };\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n      }\r\n    \r\n    return todos.map((todo, index) => (\r\n    <div \r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n     >\r\n           \r\n        <div key={todo.id} onclick={()=> completeTodo(todo.id)}>\r\n            {todo.text}\r\n        </div> \r\n        <div className=\"icons\">\r\n          <RiCloseCircleLine\r\n            onClick={() => removeTodo(todo.id)}\r\n            className='delete-icon'\r\n         />\r\n          <TiEdit \r\n            onClick={() => setEdit({id: todo.id, value: todo.next})}\r\n            className='edit-icon'\r\n          />\r\n        </div>\r\n    </div>\r\n\r\n    ));\r\n};\r\n\r\nexport default Todo\r\n","import React,{useState} from 'react';\r\nimport Todoform from './Todoform';\r\nimport Todo from './Todo';\r\n\r\nfunction Todolist() {\r\n    const [todos,setTodos] = useState([]);\r\n\r\n    const addTodo = todo =>{\r\n        if(!todo.text || /^\\s*$/.test(todo.text)){\r\n            return;\r\n        }\r\n       \r\n        const newTodos = [todo,...todos];\r\n          \r\n        setTodos(newTodos);\r\n    };\r\n    const updateTodo = (todoId, newValue) =>{\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)){\r\n            return;\r\n        }\r\n        setTodos(prev =>prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n    \r\n    const removeTodo = id => {\r\n         const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n         setTodos(removeArr);\r\n    };\r\n    const completeTodo = id =>{\r\n        let updatedTodos = todos.map(todo => { \r\n            if (todo.id === id)\r\n            {\r\n                todo.isComplete =!todo.isComplete;\r\n\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n    return (\r\n        <div>\r\n            <h1>What's the plan for today</h1>\r\n            <Todoform onSubmit={addTodo} /> \r\n            <Todo \r\n            todos={todos} \r\n            completeTodo={completeTodo}\r\n             removeTodo={removeTodo} \r\n             updateTodo={updateTodo} \r\n             />           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todolist\r\n","import React from 'react';\nimport './App.css';\nimport Todoform from './components/Todoform';\nimport Todolist from './components/Todolist';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n       <Todolist />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}